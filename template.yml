AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  StackTagName:
    Type: String
    Description: Stack Name
    Default: aws-lambda-java-basic-service
  EnvironmentTagName:
    Type: String
    Description: Environment Name
    Default: dev

Resources:
  MemoryCardHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'
  CreateNewMemoryCardFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-CreateNewMemoryCardFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: CreateNewMemoryCard
      CodeUri: build/distributions/java-base-lambda-service-1.0.0-SNAPSHOT.zip
      Handler: io.theclouddeveloper.memorycards.MemoryCardsHandler::handleCreateNewMemoryCardRequest
      Runtime: java11
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MemoryCardsTable
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          TABLE_NAME: !Ref MemoryCardsTable
          TABLE_ARN: !GetAtt MemoryCardsTable.Arn
#          REGION: "eu-west-1"
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref MemoryCardHttpApi
            PayloadFormatVersion: '2.0'
            Path: /memory-cards
            Method: POST
  GetAllMemoryCardsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-GetAllMemoryCardsFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: GetAllMemoryCardsFunction
      CodeUri: build/distributions/java-base-lambda-service-1.0.0-SNAPSHOT.zip
      Handler: io.theclouddeveloper.memorycards.MemoryCardsHandler::handleGetAllNewMemoryCardsRequest
      Runtime: java11
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MemoryCardsTable
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          TABLE_NAME: !Ref MemoryCardsTable
          TABLE_ARN: !GetAtt MemoryCardsTable.Arn
#          REGION: "eu-west-1"
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref MemoryCardHttpApi
            PayloadFormatVersion: '2.0'
            Path: /memory-cards
            Method: GET
  GetMemoryCardsByAuthorWithCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-GetMemoryCardsByAuthorWithCategory
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: GetMemoryCardsByAuthorWithCategory
      CodeUri: build/distributions/java-base-lambda-service-1.0.0-SNAPSHOT.zip
      Handler: io.theclouddeveloper.memorycards.MemoryCardsHandler::handleGetAllFromAuthorWithCategory
      Runtime: java11
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MemoryCardsTable
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          TABLE_NAME: !Ref MemoryCardsTable
          TABLE_ARN: !GetAtt MemoryCardsTable.Arn
#          REGION: "eu-west-1"
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref MemoryCardHttpApi
            PayloadFormatVersion: '2.0'
            Path: /memory-cards/{author}/{category}
            Method: GET
  GetMemoryCardByUuidFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-GetMemoryCardByUuidFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: GetMemoryCardByUuidFunction
      CodeUri: build/distributions/java-base-lambda-service-1.0.0-SNAPSHOT.zip
      Handler: io.theclouddeveloper.memorycards.MemoryCardsHandler::handleGetMemoryCardByUuidRequest
      Runtime: java11
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MemoryCardsTable
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          TABLE_NAME: !Ref MemoryCardsTable
          TABLE_ARN: !GetAtt MemoryCardsTable.Arn
#          REGION: "eu-west-1"
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref MemoryCardHttpApi
            PayloadFormatVersion: '2.0'
            Path: /memory-cards/{uuid}
            Method: GET
  DeleteMemoryCardByUuidFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-DeleteMemoryCardByUuidFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: DeleteMemoryCardByUuidFunction
      CodeUri: build/distributions/java-base-lambda-service-1.0.0-SNAPSHOT.zip
      Handler: io.theclouddeveloper.memorycards.MemoryCardsHandler::handleDeleteMemoryCardByUuid
      Runtime: java11
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MemoryCardsTable
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          TABLE_NAME: !Ref MemoryCardsTable
          TABLE_ARN: !GetAtt MemoryCardsTable.Arn
#          REGION: "eu-west-1"
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref MemoryCardHttpApi
            PayloadFormatVersion: '2.0'
            Path: /memory-cards/{uuid}
            Method: DELETE
  MemoryCardsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: author
          AttributeType: S
        - AttributeName: category_createdTimestamp
          AttributeType: S
        - AttributeName: createdTimestamp
          AttributeType: S
        - AttributeName: uuid
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: author
          KeyType: HASH
        - AttributeName: category_createdTimestamp
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: createdTimestampIndex
          KeySchema:
            - AttributeName: author
              KeyType: HASH
            - AttributeName: createdTimestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      GlobalSecondaryIndexes:
        - IndexName: uuidIndex
          KeySchema:
            - AttributeName: uuid
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

Outputs:
  BaseURL:
    Description: The baseURL for your API
    Value:  !Sub 'https://${MemoryCardHttpApi}.execute-api.${AWS::Region}.amazonaws.com/memory-cards'
  TableName:
    Description: Name of the table on which the operations happen and where the memory cards are stored
    Value: !Ref MemoryCardsTable